[{"C:\\Users\\devir\\Desktop\\work-repos\\template-app\\frontend\\src\\index.tsx":"1","C:\\Users\\devir\\Desktop\\work-repos\\template-app\\frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\devir\\Desktop\\work-repos\\template-app\\frontend\\src\\App.tsx":"3","C:\\Users\\devir\\Desktop\\work-repos\\template-app\\frontend\\src\\utils\\axios.instance.ts":"4","C:\\Users\\devir\\Desktop\\work-repos\\template-app\\frontend\\src\\components\\TemplatesExhibitor.tsx":"5","C:\\Users\\devir\\Desktop\\work-repos\\template-app\\frontend\\src\\services\\template.service.ts":"6","C:\\Users\\devir\\Desktop\\work-repos\\template-app\\frontend\\src\\ads\\src\\ads\\ads.tsx":"7","C:\\Users\\devir\\Desktop\\work-repos\\template-app\\frontend\\src\\utils\\TemplateContext.tsx":"8","C:\\Users\\devir\\Desktop\\work-repos\\template-app\\frontend\\src\\config\\msal.tsx":"9","C:\\Users\\devir\\Desktop\\work-repos\\template-app\\frontend\\src\\config\\msal\\auth-utils.ts":"10","C:\\Users\\devir\\Desktop\\work-repos\\template-app\\frontend\\src\\utils\\appInsights.ts":"11"},{"size":709,"mtime":1612777444656,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":907,"mtime":1628771012633,"results":"15","hashOfConfig":"13"},{"size":670,"mtime":1631439791445,"results":"16","hashOfConfig":"13"},{"size":2905,"mtime":1629012292594,"results":"17","hashOfConfig":"13"},{"size":759,"mtime":1629012229576,"results":"18","hashOfConfig":"13"},{"size":6613,"mtime":499162500000,"results":"19","hashOfConfig":"20"},{"size":1982,"mtime":1629026913334,"results":"21","hashOfConfig":"13"},{"size":3595,"mtime":1626697356382,"results":"22","hashOfConfig":"13"},{"size":1899,"mtime":1614685440685,"results":"23","hashOfConfig":"13"},{"size":621,"mtime":1614687530555,"results":"24","hashOfConfig":"13"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"n2y35t",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"27"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"1t3y3lb",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"C:\\Users\\devir\\Desktop\\work-repos\\template-app\\frontend\\src\\index.tsx",[],["50","51"],"C:\\Users\\devir\\Desktop\\work-repos\\template-app\\frontend\\src\\reportWebVitals.ts",[],"C:\\Users\\devir\\Desktop\\work-repos\\template-app\\frontend\\src\\App.tsx",[],"C:\\Users\\devir\\Desktop\\work-repos\\template-app\\frontend\\src\\utils\\axios.instance.ts",[],"C:\\Users\\devir\\Desktop\\work-repos\\template-app\\frontend\\src\\components\\TemplatesExhibitor.tsx",["52"],"import {\r\n  WithTemplateContext,\r\n  TemplateProperties,\r\n} from \"../utils/TemplateContext\";\r\nimport { Card, Typography , Accordion, AccordionDetails, AccordionSummary, Button, Input, makeStyles, Theme,createStyles} from \"@material-ui/core\";\r\nimport { withAITracking } from '@microsoft/applicationinsights-react-js';\r\nimport { reactPlugin } from \"../utils/appInsights\";\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { useState } from 'react';\r\nimport TemplateService from '../services/template.service';\r\nimport { useCookies } from \"react-cookie\";\r\n\r\nconst useStyles = makeStyles((theme: Theme)=>\r\n    createStyles({\r\n      root: {\r\n        minWidth: 275,\r\n      },\r\n      title: {\r\n        fontSize: 14,\r\n      },\r\n      heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n      }\r\n  }\r\n));\r\n\r\nconst Templates: React.FC<{\r\n  templateContext: TemplateProperties;\r\n}> = (props) => {\r\n  const [Field1,SetField1] = useState<string>('');\r\n  const [Field2,SetField2] = useState<string>('');\r\n  const [cookie,_] = useCookies(['csrf-token']);\r\n\r\n  const classes = useStyles();\r\n\r\n\r\n  const handleSubmit = ()=>{\r\n    TemplateService.AddTemplate(Field1,Field2,cookie['csrf-token']).then(id=>{\r\n      console.log(id);\r\n      props.templateContext.refreshContext();\r\n    })\r\n  }\r\n  return <>\r\n          <Accordion>\r\n            <AccordionSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n              aria-controls=\"panel1a-content\"\r\n              id=\"panel1a-header\"\r\n            >\r\n              <Typography className={classes.heading}>Accordion 1</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              <Input placeholder={'Field1'} onChange={(e)=>SetField1(e.currentTarget.value)}></Input>\r\n              <Input placeholder={'Field2'} onChange={(e)=>SetField2(e.currentTarget.value)}></Input>\r\n              <Button onClick={handleSubmit}>submit</Button>\r\n            </AccordionDetails>\r\n          </Accordion>  \r\n    {props.templateContext.templates? props.templateContext.templates.map(template=>\r\n      (\r\n        <Card className={classes.root} key={\"templateID-\"+template.id} >\r\n          <Typography className={classes.title} color=\"textPrimary\" variant={\"h1\"} gutterBottom>\r\n            {\"This is a template Card\"}\r\n          </Typography>\r\n            <Typography className={classes.title} color=\"textPrimary\" gutterBottom>\r\n              {\"The first template field content is: \" + template.templateField1}\r\n          </Typography>\r\n          <Typography className={classes.title} color=\"textPrimary\" gutterBottom>\r\n              {\"The second template field content is: \" + template.templateField2}\r\n          </Typography>\r\n        </Card>\r\n      )\r\n    ) : []}\r\n    </>\r\n};\r\nexport const TemplateExhibitor = withAITracking(reactPlugin, WithTemplateContext(Templates));\r\n","C:\\Users\\devir\\Desktop\\work-repos\\template-app\\frontend\\src\\services\\template.service.ts",[],"C:\\Users\\devir\\Desktop\\work-repos\\template-app\\frontend\\src\\ads\\src\\ads\\ads.tsx",[],["53","54"],"C:\\Users\\devir\\Desktop\\work-repos\\template-app\\frontend\\src\\utils\\TemplateContext.tsx",[],"C:\\Users\\devir\\Desktop\\work-repos\\template-app\\frontend\\src\\config\\msal.tsx",[],"C:\\Users\\devir\\Desktop\\work-repos\\template-app\\frontend\\src\\config\\msal\\auth-utils.ts",[],"C:\\Users\\devir\\Desktop\\work-repos\\template-app\\frontend\\src\\utils\\appInsights.ts",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":33,"column":17,"nodeType":"61","messageId":"62","endLine":33,"endColumn":18},{"ruleId":"55","replacedBy":"63"},{"ruleId":"57","replacedBy":"64"},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"@typescript-eslint/no-unused-vars","'_' is assigned a value but never used.","Identifier","unusedVar",["65"],["66"],"no-global-assign","no-unsafe-negation"]